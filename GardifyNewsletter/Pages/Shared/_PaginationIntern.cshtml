@model GardifyNewsletter.ViewModel.PaginationViewModel
<!-- limit page count -->
@{
    List<int> pages = new List<int>();


    if (Model.TotalPages <= 5)
    {
        for (int i = 1; i <= Model.TotalPages; i++)
        {
            pages.Add(i);
        }
    }
    else
    {
        // range of 5
        // +2 from left border or -2 from right border
        int midPoint = Model.CurrentPage < 3 ? 3
            : Model.CurrentPage > Model.TotalPages - 2 ? Model.TotalPages - 2
            : Model.CurrentPage;

        for (int i = midPoint - 2; i <= midPoint + 2; i++)
        {
            pages.Add(i);
        }

        if (pages[0] != 1)
        {
            pages.Insert(0, 1);
            if (pages[1] - pages[0] > 1)
            {
                pages.Insert(1, -1);

            }
        }

        if (pages[pages.Count - 1] != Model.TotalPages)
        {
            pages.Insert(pages.Count, Model.TotalPages);
            if (pages[pages.Count - 1] - pages[pages.Count - 2] > 1)
            {
                pages.Insert(pages.Count - 1, -1);

            }
        }
    }
}

<nav aria-label="...">

    <ul class="pagination">
        <li class="page-item @(Model.EnablePrevious ? " " : " disabled" )">
            <a asp-route-pageIndex="@(Model.CurrentPage -1)"
               asp-route-searchString="@Model.SearchString"
               asp-route-selectedSector="@Model.SelectedSector"
               asp-route-sortOrder="@Model.CurrentSort"
               class="page-link" aria-label="Next">
                <span aria-hidden="true"><</span>
            </a>
        </li>

        @foreach (var p in pages)
        {
            if (p == -1)
            {
                <span class="pagination-dots"> ... </span>
            }
            else
            {
                <li class="page-item @(p == Model.CurrentPage ? " active" : "" )">
                    <a asp-route-pageIndex="@p"
                       asp-route-searchString="@Model.SearchString"
                       asp-route-selectedSector="@Model.SelectedSector"
                       asp-route-sortOrder="@Model.CurrentSort"
                       class="page-link">@p</a>
                </li>
            }
        }
        <li class="page-item @(Model.EnableNext ? " " : " disabled" )">
            <a asp-route-pageIndex="@(Model.CurrentPage + 1)"
               asp-route-searchString="@Model.SearchString"
               asp-route-selectedSector="@Model.SelectedSector"
               asp-route-sortOrder="@Model.CurrentSort"
               class="page-link" aria-label="Previous">
                <span aria-hidden="true">></span>
            </a>
        </li>
    </ul>
</nav>