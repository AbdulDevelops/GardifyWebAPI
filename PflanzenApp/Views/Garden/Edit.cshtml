@model GardifyModels.Models.GardenViewModels.GardenEditViewModel

@{
	ViewBag.Title = "Garten bearbeiten";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Gartenbereich bearbeiten</h2>

<div class="form-horizontal">
	@using (Html.BeginForm("Edit", "Garden", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.AntiForgeryToken()

		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id, new { id = Model.Id })

		<div class="form-group">
			<p class="control-label col-md-2">Name</p>
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			<p class="control-label col-md-2">Beschreibung</p>
			<div class="col-md-10">
				@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			<p class="control-label col-md-2">Privat</p>
			<div class="col-md-10">
				@Html.EditorFor(model => model.IsPrivate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.IsPrivate, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			<p class="control-label col-md-2">Himmelsrichtung</p>
			<div class="col-md-10">

				@Html.DropDownList("CardinalDirection", new SelectList(
				 new List<SelectListItem>{
					 new SelectListItem() { Text = "Norden", Value = "0"},
					 new SelectListItem() { Text = "Osten", Value = "1" },
					 new SelectListItem() { Text = "Süden", Value = "2" },
					 new SelectListItem() { Text = "Westen", Value = "3" },
					 new SelectListItem() { Text = "Nordosten", Value = "4" },
					 new SelectListItem() { Text = "Nordwestern", Value = "5" },
					 new SelectListItem() { Text = "Südosten", Value = "6" },
					 new SelectListItem() { Text = "Südwesten", Value = "7" }
				 }, "Value", "Text", Model.CardinalDirection))
			</div>
		</div>

		<div class="form-group">
			<p class="control-label col-md-2">Schatten-Intensität</p>
			<div class="col-md-10">
				@Html.DropDownList("ShadowStrength", new SelectList(
				 new List<SelectListItem>{
					 new SelectListItem() { Text = "Sonne", Value = "0"},
					 new SelectListItem() { Text = "Halbschatten", Value = "1" },
					 new SelectListItem() { Text = "Schatten", Value = "2" }
				 }, "Value", "Text", Model.ShadowStrength))
			</div>
		</div>

		<div class="form-group">
			<p class="control-label col-md-2">Bodentyp</p>
			<div class="col-md-10">
				@Html.DropDownList("GroundType", new SelectList(
			   new List<SelectListItem>(){
				new SelectListItem() { Text="Sandig", Value = "0"},
				new SelectListItem() { Text="Lehmig", Value = "1"},
				new SelectListItem() { Text="Humös",Value="2" }
			   }, "Value", "Text", Model.GroundType))
			</div>
		</div>
		<div class="form-group">
			<p class="control-label col-md-2">pH-Typ</p>
			<div class="col-md-10">
				@Html.DropDownList("PhType", new SelectList(
			   new List<SelectListItem>(){
				new SelectListItem() { Text="Sauer", Value = "0"},
				new SelectListItem() { Text="Neutral", Value = "1"},
				new SelectListItem() { Text="Basisch",Value="2" }
			   }, "Value", "Text", Model.PhType))
			</div>
		</div>
		<div class="form-group">
			<p class="control-label col-md-2">Bodenfeuchtigkeit</p>
			<div class="col-md-10">
				@Html.DropDownList("Wetness", new SelectList(
			   new List<SelectListItem>(){
				new SelectListItem() { Text="Trocken", Value = "0"},
				new SelectListItem() { Text="Normal", Value = "1"},
				new SelectListItem() { Text="Nass",Value="2" }
			   }, "Value", "Text", Model.Wetness))
			</div>
		</div>
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Speichern" class="btn btn-default" />
			</div>
		</div>
	}
	<h4>Verknüpfte Bilder</h4>
	<div class="form-group">
		<label class="control-label col-md-2"></label>
		<div class="image-wrapper col-md-10">
			@if (Model.Images != null && Model.Images.Any())
			{
				foreach (var img in Model.Images)
				{
					<div class="tumbnail col-md-3">
						<img title="@img.TitleAttr" src="@img.SrcAttr" />
						<div class="caption">
							<h3>@img.FullTitle</h3>
							<p>@img.FullDescription</p>
							@using (Html.BeginForm("delete-garden-image", "Garden"))
							{
								@Html.AntiForgeryToken()
								@Html.Hidden("ImageRefId", img.Id)
								@Html.Hidden("gardenId", Model.Id)
								<input type="submit" value="Bild löschen" class="btn btn-default" />
							}
						</div>
					</div>
				}
			}
			else
			{
				<p>Noch kein Bild hochgeladen</p>
			}
		</div>
	</div>
	<h4>Neues Bild hochladen</h4>
	@using (Html.BeginForm("upload-garden-image", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.AntiForgeryToken()
		//@Html.Hidden("gardenId", Model.Id)
        @Html.HiddenFor(model => model.Id, new { id = Model.Id })
		<div class="form-group">
			<label class="control-label col-md-2">Datei auswählen</label>
			<div class="col-md-10">
				<input type="file" name="imageFile" />
			</div>
		</div>
		<div class="form-group">
			<label class="control-label col-md-2">Titel</label>
			<div class="col-md-10">
				<input class="form-control" name="ImageTitle" type="text" required="required"/>
			</div>
		</div>
		<div class="form-group">
			<label class="control-label col-md-2">Beschreibung</label>
			<div class="col-md-10">
				<textarea class="form-control" name="ImageDescription" rows="2" cols="80" required="required"></textarea>
			</div>
		</div>
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Hochladen" class="btn btn-default" />
			</div>
		</div>
	}
</div>
<hr />
<div>
	@Html.ActionLink("Zurück zum Garten", "Index")
</div>
